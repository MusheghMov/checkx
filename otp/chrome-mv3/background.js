var background=function(){"use strict";var s,i;function c(n){return n==null||typeof n=="function"?{main:n}:n}const e=(i=(s=globalThis.browser)==null?void 0:s.runtime)!=null&&i.id?globalThis.browser:globalThis.chrome,u=c(()=>{e.runtime.onInstalled.addListener(()=>{r()}),e.runtime.onStartup.addListener(()=>{r()}),e.contextMenus.onClicked.addListener(async(n,a)=>{n.menuItemId==="save-to-query"&&e.action.openPopup()}),e.commands.onCommand.addListener(async(n,a)=>{n==="save-link"&&e.action.openPopup()})});async function r(){await e.contextMenus.removeAll(),e.contextMenus.create({id:"save-to-query",title:"Save to Haibrid Query",contexts:["page","link","selection"]})}function b(){}function o(n,...a){}const l={debug:(...n)=>o(console.debug,...n),log:(...n)=>o(console.log,...n),warn:(...n)=>o(console.warn,...n),error:(...n)=>o(console.error,...n)};let t;try{t=u.main(),t instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(n){throw l.error("The background crashed on startup!"),n}return t}();
background;
